# -*- coding: utf-8 -*-
"""churn_prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10KMS9t3U_5mdeYiKdutpML9QbVzL1tK0
"""

import pandas as pd
data = pd.read_csv("/content/Churn_Modelling.csv")

data.head()

data.info

data.drop(columns =['RowNumber','CustomerId','Surname'],inplace = True)

data.head()

data['Geography'].value_counts()

data['Gender'].value_counts()

data = pd.get_dummies(data,columns=['Geography','Gender'],drop_first=True)

data.head()

data.columns

X = data.drop(columns=['Exited'])

y=data['Exited']

from sklearn.model_selection import train_test_split
X_train,X_test, y_train,y_test =train_test_split(X,y,test_size=0.2,random_state=0)

from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()

X_train_trf=scaler.fit_transform(X_train)
X_test_trf = scaler.transform(X_test)

import tensorflow
from tensorflow import keras
from tensorflow.keras import Sequential
from tensorflow.keras.layers import Dense

model = Sequential()

model.add(Dense(3,activation ='sigmoid',input_dim=11))
model.add(Dense(1,activation ='sigmoid'))

model.summary()

model.compile(optimizer='Adam',loss='binary_crossentropy')

history = model.fit(X_train,y_train,batch_size=50,epochs=10)

model.layers[1].get_weights()

y_pred =model.predict(X_test)

y_pred

import numpy as np

final_pred = np.where(y_pred>=0.5,1,0)

final_pred

from sklearn.metrics import accuracy_score

accuracy_score(final_pred,y_test)